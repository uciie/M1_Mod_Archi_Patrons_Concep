/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

 // for gradle 8.4 if needed (Java 21): ./gradlew wrapper --gradle-version=8.4
 // RUN COMMAND FOR TESTS ➜ ./gradlew clean test jacocoTestReport
 // TESTS RESULTS IN ➜ open app/build/reports/tests/test/index.html
 // JACOCO REPORTS IN ➜ open app/build/customJacocoReportDir/test/html/index.html

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application

    // Test coverage
    jacoco
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:32.1.1-jre")

    // vavr
    implementation("io.vavr:vavr:0.10.4")

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(20))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("code.App")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Jacoco
tasks.test {
    finalizedBy(tasks.jacocoTestReport) // report is always generated after tests run
}
jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir("customJacocoReportDir")
}

tasks.jacocoTestReport {
    dependsOn(tasks.test) // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = false
        // html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
        // xml.outputLocation = layout.buildDirectory.dir("jacocoXml")
    }
}
